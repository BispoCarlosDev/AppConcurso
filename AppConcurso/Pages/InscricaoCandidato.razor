@page "/inscricao"
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject InscricaoController inscControl;
@inject CargoController cargoControl;
@inject CandidatoController candControl;
@inject NavigationManager navegacao;


<h3>INSCRIÇÃO DE CANDIDATO</h3>

<div class="container">
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <div class="row align-items-start">
        <div class="col">
            <label for="veiculo" class="form-label">CARGOS:</label>
            <select @onchange="SelecionarCargos" class="form-select" aria-label="Selecione um Cargo">
                <option selected>Selecione uma placa</option>
                @foreach (var item in listaCargos)
                {
                    <option value=@item.Id>@item.NomeCargo</option>
                }
            </select>
        </div>
        <div class="col">
            <div class="form-group">
               <label for="input-datalist">Selecionar Candidato</label>
                <input type="text" class="form-control" placeholder="Buscar" list="lista-pessoas" @onchange="SelecionarCandidatos">
                <datalist id="lista-pessoas">
                  @foreach (var item in listaCandidatos)
                  {
                     <option value="@item.Cpf">@item.Nome</option>
                  }

                </datalist>
            </div>
        </div>
    </div>
   
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <div class="row align-items-start">
        <div class="col">
            <div class="mb-3">
                 <label for="exampleFormControlInput1" class="form-label">NOME:</label>
                 <input @bind="candidato.Nome" type="text" class="form-control" id="exampleFormControlInput1">
             </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">CPF:</label>
               <input @bind="candidato.Cpf" type="text" class="form-control" id="exampleFormControlInput1">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">CARGO:</label>
                <input @bind="cargo.NomeCargo" type="text" class="form-control" id="exampleFormControlInput1">
            </div>
        </div>
       
    </div>
  
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    @if (enabledButton)
    {
        <button type="button" class="btn btn-warning" @onclick="Cancelar">CANCELAR</button>
        <button type="button" class="btn btn-success" @onclick="Salvar">SALVAR</button>
    }
    else
    {
        <div class="alert alert-success" role="alert">
            Inscrição realizada com sucesso! (Número: @numeroInsc);
        </div>
        <button type="button" class="btn btn-primary" @onclick="NovaInscricao">NOVA INSCRIÇÃO</button>
    }
</div>

@code {
    private List<Cargo> listaCargos = new List<Cargo>();
    private List<Candidato> listaCandidatos = new List<Candidato>();

    private Cargo cargo = new Cargo();
    private Candidato candidato = new Candidato();

    private bool enabledButton = true;
    private int numeroInsc = 0;

    protected override async Task OnInitializedAsync()
    {
        var listaCarg = await cargoControl.ListaCargos();
        var listaCand = await candControl.ListaCandidatos();
        var listaInsc = await inscControl.ListaIncricoes();


        listaCargos = listaCarg;
        listaCandidatos = listaCand;
        numeroInsc = 10000 + listaInsc.Count + 1;
    }

    private async Task Salvar()
    {
        Inscricao inscricao = new Inscricao();
        inscricao.DataInscricao = DateTime.Today;
        inscricao.NumeroInsc = numeroInsc;
        inscricao.Cargo = cargo;
        inscricao.Candidato = candidato;

        await inscControl.Add(inscricao);
        await inscControl.Salvar();
        enabledButton = false;
    }

    public void Cancelar()
    {
        navegacao.NavigateTo("/inscricao", forceLoad: true);
    }

    public void SelecionarCandidatos(ChangeEventArgs e)
    {
        string cpf = e.Value.ToString();
        candidato = listaCandidatos.Where(p => p.Cpf == cpf).FirstOrDefault();
    }

    public void SelecionarCargos(ChangeEventArgs e)
    {
        int id = Convert.ToInt32(e.Value.ToString());
        cargo = listaCargos.Where(p => p.Id == id)FirstOrDefault();
    }

    public void NovaInscricao()
    {
        navegacao.NavigateTo("/inscricao", forceLoad: true);
    }
}
